HASH="%C(yellow)%h%Creset"
RELATIVE_TIME="%Cgreen(%ar)%Creset"
AUTHOR="%C(bold blue)<%an>%Creset"
REFS="%C(red)%d%Creset"
SUBJECT="%s"

FORMAT="$HASH}$RELATIVE_TIME}$AUTHOR}$REFS $SUBJECT"

pretty_git_log() {
    git log --graph --pretty="tformat:${FORMAT}" $* |
        sed -Ee 's/(^[^<]*) ago)/\1)/' -Ee 's/(^[^<]*), [[:digit:]]+ .*months?)/\1)/' |
        column -s '}' -t |
        less -FXRS
}

eval "$(hub alias -s)"

# hub tab-completion script for zsh.
# This script complements the completion script that ships with git.
#
# vim: ft=zsh sw=2 ts=2 et

# Autoload _git completion functions
if declare -f _git > /dev/null; then
_git
fi

if declare -f _git_commands > /dev/null; then
  _hub_commands=(
      'alias:show shell instructions for wrapping git'
      'pull-request:open a pull request on GitHub'
      'fork:fork origin repo on GitHub'
      'create:create new repo on GitHub for the current project'
      'browse:browse the project on GitHub'
      'compare:open GitHub compare view'
      )
  # Extend the '_git_commands' function with hub commands
  eval "$(declare -f _git_commands | sed -e 's/base_commands=(/base_commands=(${_hub_commands} /')"
fi

cleanup_git_branches() {
  # This has to be run from master
  git checkout master

  # Update our list of remotes
  git fetch
  git remote prune origin

  # Remove local fully merged branches
  git branch --merged master | grep -vE 'master$|develop$' | xargs git branch -d

  # Show remote fully merged branches
  echo "The following remote branches are fully merged and will be removed:"
  git branch -r --merged master | sed 's/ *origin\///' | grep -vE 'master$|develop$'

  read -p "Continue (y/n)? "
  if [ "$REPLY" == "y" ]; then

    # Remove remote fully merged branches
    git branch -r --merged master |
        sed 's/ *origin\///' |
        grep -vE 'master$|develop$' |
        xargs -I% git push origin :%

    echo "Done!"
  fi
}

SSH_ENV="$HOME/.ssh/environment"

function start_agent {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
  . "${SSH_ENV}" > /dev/null
#ps ${SSH_AGENT_PID} doesn't work under cywgin
  ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
  }
else
  start_agent;
fi

